<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用 Hexo 和 Github 快速搭建个人博客]]></title>
    <url>%2F2018%2F01%2F31%2F%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGithub%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[网上类似的教程一搜一大把，写得其实很详细。但对于初次接触我来说，这是一次全新的体验。所以在经历了多次「安装——配置——部署——删除——再安装——」之后，大概弄懂了整个流程。正好也是博客的开篇文章，记录一下整个搭建流程，加深印象。 安装安装前提在安装前，先确保电脑上已经安装了 Node.js 和 Git 环境。 安装 Hexo1$ yarn global add hexo-cli 官方是使用 npm 进行安装，我个人推荐使用 yarn 进行安装，关于 yarn 和 npm 优劣分析，可以参考这片文章《Yarn vs npm: 你需要知道的一切》 建站初始化我们先新建一个 blog 文件夹，然后进入该文件夹运行： 1$ hexo init 初始化完成后， blog 文件夹的目录如下： 123456789.├── .gitignore├── _config.yml├── package.json├── yarn.lock├── scaffolds├── source| └── _posts└── themes 本地访问我们先不去管网站的配置，继续再命令行里运行： 1$ hexo g &amp;&amp; hexo s 运行成功后你会发现提示信息： Hexo is running at http://localhost:4000/. 这个时候我们访问 http://localhost:4000/ 就会发现网站已经建好了！ 常用命令以下 4 个是我在搭建过程中发现使用频率最高的 4 个命令，甚至我感觉只要会这 4 个命令就可以了。 generate 生成静态文件 1$ hexo generate server 启动服务器 1$ hexo server deploy 部署网站 1$ hexo deploy clean 清除缓存文件（db.json）和已生成的静态文件（public） 1$ hexo clean 更多命令和参数请看 这里 ！ 部署到 Github首先先到 Github 上新建一个仓库，仓库名的格式为： 1&lt;username&gt;.github.io 例如我的就是 hooray.github.io ，创建好后，复制仓库的 HTTPS 地址，打开 blog 根目录下的 _config.yml 文件，拖动到底部找到 deploy 配置，按照以下格式修改并保存： 123deploy: type: git repo: &lt;仓库地址&gt; 这个时候我们需要安装 hexo-deployer-git 自动部署发布工具 1$ yarn add hexo-deployer-git 安装完成后，就可以去发布了 1$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 第一次发布会提示你输入你的 Github 账号和密码： 稍微等待一会，会提示发布成功，然后我们在浏览器里测试访问 https://hooray.github.io ，大功告成！ 主题安装 NexT1$ git clone https://github.com/theme-next/hexo-theme-next themes/next 我安装的是 6.0.x 的 NexT ，但在 NexT 官网上提供的还是 5.1.x 的安装命令和文档，因为 6.0.x 和 5.1.x 的配置有所不同，建议第一次练习搭建还是使用 5.1.x ，熟悉配置文档后，再用 6.0.x 。 修改 _config.yml 文件里 theme 配置： 1theme: next]]></content>
      <categories>
        <category>工具推荐</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
</search>
